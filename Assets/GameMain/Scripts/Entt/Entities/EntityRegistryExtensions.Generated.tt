<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ include file="../T4Includes/GeneratorHelpers.ttinclude" #>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entt.Entities
{
    public partial class EntityRegistryExtensions 
    {
<#
    for (var p = 2; p <= MaxParameterCount; p += 1)
    {
        var templateParamsLight = BuildLightTemplate(p);

#>
        //判断是否有指定的组件
        public static bool HasComponent<TEntityKey, <#= templateParamsLight #>>(this IEntityViewControl<TEntityKey> registry, TEntityKey e)
            where TEntityKey : IEntityKey
        {
            return <#= JoinGenericParams(p, "registry.HasComponent<T{0}>(e)", " && ") #>;
        }
        
        //获取指定的组件
        public static bool GetComponent<TEntityKey, <#= templateParamsLight #>>(this IEntityViewControl<TEntityKey> registry, TEntityKey entity, 
                                                             <#= JoinGenericParams(p, "out T{0} c{0}", ", ") #>)
            where TEntityKey : IEntityKey
        {
            if (<#= JoinGenericParams(p, "registry.GetComponent(entity, out c{0})", " && ") #>)
            {
                return true;
            }

            <#= JoinGenericParams(p, "c{0} = default;", "\n            ") #>
            return false;
        }

<#
    }
#>


    }
}